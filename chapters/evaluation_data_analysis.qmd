---
output: html_document
editor_options: 
  chunk_output_type: console
---
# Evaluation data: description, exploration, checks

## Data input, cleaning, feature construction and imputation  

```{r setup, warning=FALSE}
#| label: load-packages
#| code-summary: "load packages"

library(conflicted)
conflicts_prefer(dplyr::filter, dplyr::select)

library(dplyr)
library(DT)
library(ggplot2)
library(ggrepel)
library(here)
library(plotly)
library(RColorBrewer)
library(readr)
library(shiny)
library(stringr)
library(tidyr)

paper_authors <- readr::read_csv(here("data/paper_authors.csv"))
research <- readr::read_csv(here("data/research.csv"))
ratings <- readr::read_csv(here("data/rsx_evalr_rating.csv"))

rating_cats <- c("overall", "adv_knowledge", "methods", "logic_comms", "real_world", "gp_relevance", "open_sci")

pred_cats <- c("journal_predict", "merits_journal")
```


::: {.callout-note collapse="true"}


    
## About our papers

This section shows the papers and/or projects we have evaluated so far.


::: column-body-outset    

```{r research-table}

authors <- paper_authors %>% 
  summarize(.by = research,
    authors = paste(author, collapse = ", ")
  )

research %>%
  arrange(label_paper_title) %>%  
  left_join(authors, by = join_by(label_paper_title == research)) %>% 
   rename(
    "Paper" = label_paper_title,
    "Main category" = main_cause_cat,
    "Category 2" = secondary_cause_cat,
    "Main source" = source_main,
    "Authors" = authors,
  ) %>% 
  DT::datatable(
    caption = "Evaluations (confidence bounds not shown)", 
    filter = 'top',
    rownames= FALSE,
    options = list(
      pageLength = 5,
      columnDefs = list(list(width = '150px', targets = 1)))
    ) %>% 
  formatStyle(
    columns = c("Paper", "Authors", "Main category", "Category 2", "Main source"), 
    textAlign = "center"
  ) %>% 
  formatStyle(
    columns = "Paper",
    fontSize = "10px"
  )

```

:::

<!-- Todo: make this smaller, get it to fit on the page better, more user-friendly -->

#### Evaluation metrics {-}


@metrics-table lists our quantitative metrics ("ratings") for each evaluation
of each paper.

::: column-body-outset    

```{r}
#| label: metrics-table
# Need to find a way to control column width but it seems to be a problem with DT
# https://github.com/rstudio/DT/issues/29

ratings %>%
  select(research, evaluator, criteria, middle_rating) %>% 
  filter(! is.na(criteria)) %>% 
  distinct(.keep_all = TRUE, research, evaluator, criteria) %>% 
  tidyr::pivot_wider(id_cols = c(research, evaluator), names_from = criteria,
                     values_from = middle_rating) %>% 
  arrange(research, evaluator) %>%
  rename(Research = research, Evaluator = evaluator) %>%
  datatable(
    caption  = "Evaluations and predictions (confidence bounds not shown)", 
    filter   = 'top',
    rownames = FALSE,
    options  = list(pageLength = 5, 
                    columnDefs = list(list(width = '150px', targets = 0)))
  ) %>% 
  formatStyle(columns = -1, textAlign = 'center')

```
:::


#### Initial pool of papers: categories {-}

Next, we present a plot of categories for all papers in the Unjournal's initial pool. One paper can belong to more than one category. 


```{r all_paper_categories}
#| fig-height: 9
#| 
# how many papers are in this dataset?
n_papers <- nrow(research)

# plot
research %>% 
  select(main_cause_cat) %>% 
  replace_na(list(main_cause_cat = "Unknown")) %>%
  count(main_cause_cat) %>%
  mutate(Category = str_to_title(main_cause_cat)) %>%
  ggplot(aes(x = reorder(Category, n), y = n)) +
  geom_bar(aes(fill = Category), stat = "identity", color = "grey30") + 
  coord_flip() +
  theme_bw() +
  labs(y = "Paper category", x = "Count",
       caption = paste0("Total number of papers = ", n_papers)) +
  theme(legend.position = "none")
```


#### Paper selection {-}

The Sankey diagram below starts with the papers we prioritized for likely
*Unjournal* evaluation.



```{r sankey-plot}
#| label: sankey-plot
#| eval: false

all_papers_p %>% 
  select(id, source_main, `stage of process/todo`) %>% 
  rename(stage = `stage of process/todo`) %>% 
  mutate(source_main = if_else(source_main == "NA", NA_character_, source_main)) %>% 
  replace_na(list(source_main = "unknown", stage = "unknown")) %>%
  mutate(stage0 = "Paper Pool",
         stage1 = case_match(stage,
                             "contacting/awaiting_authors_response_to_evaluation" ~ "Selected",
                             "seeking_(more)_evaluators" ~ "Selected",
                             "published" ~ "Selected",
                             .default = NA_character_),
         stage2 = paste0("Stage: ", str_to_sentence(stage)),
         source_main = str_replace_all(string = source_main, 
                                  pattern = "-", 
                                  replace = " ") %>% 
           # str_to_title() %>% 
           str_replace_all(pattern = "\\s+",
                       replacement = " "),
         source = paste0("Source: ", source_main)) -> temp

temp %>% 
  select(source, stage0, stage1, stage2) %>%
  pivot_longer(cols = everything()) %>% 
  arrange(name) %>% 
  select(value) %>% 
  distinct() %>% drop_na() -> nodes


nodes = tibble(index =  seq(0,nrow(nodes)-1, by = 1),
               label = nodes$value,
               color = c(brewer.pal(n = length(unique(temp$source)), "Pastel2"), # Sources
                         "#984EA3",# all papers
                         "#4DAF4A",# selected
                         "#4DAF9A","#FF7F00","#FFFF33", "#A65628", "#999999","#377288", "#F781BF","#999999")) #outcomes


# link = tibble(source = c(),
#               target = c(),
#               value = c())

# source -> paper pool (stage0) -> stage1 -> stage2

# add source > paper pool (stage0)
link = temp %>% 
  group_by(source, stage0) %>% 
  count() %>%
  rename(target = stage0, value = n) 

# add paper pool > stage1 (selected)
temp %>% 
  group_by(stage0, stage1) %>% 
  count() %>%
  rename(source = stage0, target = stage1, value = n) %>% 
  filter(!is.na(target)) -> temp2

link = bind_rows(link, temp2)

# add paper pool > stage2 (not selected)
temp %>% 
  group_by(stage0, stage1, stage2) %>% 
  count() %>% 
  ungroup() %>%
  filter(is.na(stage1)) %>%
  rename(source = stage0, target = stage2, value = n) %>%
  select(-stage1) -> temp2

link = bind_rows(link, temp2) 

# add selected (stage1) to stage 2
temp %>% 
  group_by(stage0, stage1, stage2) %>% 
  count() %>% 
  ungroup() %>% 
  filter(stage1 == "Selected") %>% 
  rename(source = stage1, target = stage2, value = n) %>%
  select(-stage0) -> temp2

link = bind_rows(link, temp2) 

# add node index to link
link %>% 
  ungroup() %>% 
  left_join(nodes, by = c("source" = "label")) %>%
  rename(source_index = index) %>% 
  left_join(nodes, by = c("target" = "label")) %>%
  rename(target_index = index) %>% 
  select(source_index, target_index, value) %>%
  rename(source = source_index,
         target = target_index) -> link



fig <- plot_ly(type = "sankey", orientation = "h", 

  node = list(
    label = nodes$label,
    color = nodes$color,
    pad = 15,
    thickness = 20,
    line = list(color = "black", width = 0.5),
    hovertemplate = "%{label}: %{value:.0f} papers<extra></extra>"
    ),
  
  link = list(
    source = link$source,
    target = link$target,
    value =  as.integer(link$value),
    hovertemplate = "%{value:.0f} papers<extra></extra>"
  ))

fig <- fig %>% layout(
  title = "Unjournal Paper Flow Diagram",
  font = list(size = 10)
)

fig






```



#### Paper source {-}

The bar plot below shows how papers came to be evaluated by us.

```{r paper-source}

# Bar plot
research %>% 
  replace_na(list(source_main = "Unknown")) %>% 
  mutate(
    source_main = str_replace_all(source_main, "-", " "),
    source_main = str_replace_all(source_main, " +", " ")
  ) %>%
  select(source_main) %>% 
  ggplot(aes(y = source_main)) + 
  geom_bar(position = "stack", stat = "count", color = "grey30", fill = "grey80") +
  labs(x = "Count", y = "") +
  labs(title = "Sources of evaluated papers") +
  theme_bw() +
  theme(text = element_text(size = 15)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 20))

```

```{r data clean}
#| eval: false
# JB: Most of these should probably be cleaned in data storage

# paper statuses that are considered "being evaluated"
eval_true = c("published", 
              "contacting/awaiting_authors_response_to_evaluation",
              "awaiting_publication_ME_comments",
              "awaiting_evaluations")

# Is the paper being evaluated? 
all_papers_p <- all_papers_p %>% 
  mutate(is_evaluated = if_else(`stage of process/todo` %in% eval_true, TRUE, FALSE))

# main source clean
all_papers_p <- all_papers_p %>% 
  mutate(source_main = case_when(source_main == "NA" ~ "Not applicable",
                                 source_main == "internal-from-syllabus-agenda-policy-database" ~ "Internal: syllabus, agenda, etc.",
                                 is.na(source_main) ~ "Unknown",
                                 TRUE ~ source_main))

all_papers_p %>% 
ggplot(aes(x = fct_infreq(source_main), fill = is_evaluated)) + 
  geom_bar(position = "stack", stat = "count") +
  labs(x = "Source", y = "Count", fill = "Selected for\nevaluation?") +
  coord_flip() + # flipping the coordinates to have categories on y-axis (on the left)
  labs(title = "Evaluations by source of the paper") +
  theme_bw() +
  theme(text = element_text(size = 15)) +
  scale_fill_brewer(palette = "Set1") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 20))
```



### Shiny dashboard {-}

::: column-body-outset

```{=html}

<iframe height="900" width="120%" frameborder="no" src="https://unjournal.shinyapps.io/DataExplorer/"> </iframe>


```

