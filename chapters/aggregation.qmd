# Aggregation of evaluators judgments (modeling)

```{r setup}
#| label: input_eval_data
#| code-summary: "Input evaluation data"
#| include: false

library(tidyverse)
library(aggreCAT)
library(here)
library(irr)
 
evals_pub <- read_rds(file = here("data", "evals.Rdata"))

# Lists of categories
rating_cats <- c("overall", "adv_knowledge", "methods", "logic_comms", "real_world", "gp_relevance", "open_sci")
pred_cats <- c("journal_predict", "merits_journal")

```


## Notes on sources and approaches


::: {.callout-note collapse="true"}

## Hanea et al {-}
(Consult, e.g., repliCATS/Hanea and others work; meta-science and meta-analysis approaches)

`aggrecat` package

> Although the accuracy, calibration, and informativeness of the majority of methods are very similar, a couple of the aggregation methods consistently distinguish themselves as among the best or worst. Moreover, the majority of methods outperform the usual benchmarks provided by the simple average or the median of estimates.

[Hanea et al, 2021](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0256919#sec007)

 However, these are in a different context. Most of those measures are designed to deal with probablistic forecasts for binary outcomes, where the predictor also gives a 'lower bound' and 'upper bound' for that probability. We could roughly compare that to our continuous metrics with 90% CI's (or imputations for these).

Furthermore, many (all their successful measures?) use 'performance-based weights', accessing metrics from prior prediction performance of the same forecasters We do not have these, nor do we have a sensible proxy for this. 
:::


::: {.callout-note collapse="true"}
## D Veen et al (2017)

[link](https://www.researchgate.net/profile/Duco-Veen/publication/319662351_Using_the_Data_Agreement_Criterion_to_Rank_Experts'_Beliefs/links/5b73e2dc299bf14c6da6c663/Using-the-Data-Agreement-Criterion-to-Rank-Experts-Beliefs.pdf)

... we show how experts can be ranked based on their knowledge and their level of (un)certainty. By letting experts specify their knowledge in the form of a probability distribution, we can assess how accurately they can predict new data, and how appropriate their level of (un)certainty is. The expert’s specified probability distribution can be seen as a prior in a Bayesian statistical setting. We evaluate these priors by extending an existing prior-data (dis)agreement measure, the Data Agreement Criterion, and compare this approach to using Bayes factors to assess prior specification. We compare experts with each other and the data to evaluate their appropriateness. Using this method, new research questions can be asked and answered, for instance: Which expert predicts the new data best? Is there agreement between my experts and the data? Which experts’ representation is more valid or useful? Can we reach convergence between expert judgement and data? We provided an empirical example ranking (regional) directors of a large financial institution based on their predictions of turnover. 

Be sure to consult the [correction made here](https://www.semanticscholar.org/paper/Correction%3A-Veen%2C-D.%3B-Stoel%2C-D.%3B-Schalken%2C-N.%3B-K.%3B-Veen-Stoel/a2882e0e8606ef876133f25a901771259e7033b1)

:::   


::: {.callout-note collapse="true"}
## Also seems relevant:

See [Gsheet HERE](https://docs.google.com/spreadsheets/d/14japw6eLGpGjEWy1MjHNJXU1skZY_GAIc2uC2HIUalM/edit#gid=0), generated from an Elicit.org inquiry.


::: 



In spite of the caveats in the fold above, we construct some  measures of aggregate beliefs  using the `aggrecat` package. We will make (and explain) some ad-hoc choices here. We present these:

1. For each paper
2. For categories of papers and cross-paper categories of evaluations
3. For the overall set of papers and evaluations

We can also hold onto these aggregated metrics for later use in modeling.


- Simple averaging

- Bayesian approaches 

- Best-performing approaches from elsewhere   

- Assumptions over unit-level random terms 


### Simple rating aggregation {-}

Below, we are preparing the data for the aggreCATS package.

```{r babys_first_ratings_agg, eval=FALSE}
# JB: This section is a work in progress, please do not edit

# paper_ratings: one row per rating category and 'type' (score, upper, lower bound.)
evals_pub %>% 
  select(id, eval_name, paper_abbrev, 
         overall, overall_lb_imp, overall_ub_imp,
         adv_knowledge, adv_knowledge_lb_imp, adv_knowledge_ub_imp,
         methods, methods_lb_imp, methods_ub_imp,
         logic_comms, logic_comms_lb_imp, logic_comms_ub_imp,
         real_world, real_world_lb_imp, real_world_ub_imp,
         gp_relevance, gp_relevance_lb_imp, gp_relevance_ub_imp,
         open_sci, open_sci_lb_imp, open_sci_ub_imp) %>% 
  rename_with(function(x) paste0(x,"_score"), all_of(rating_cats)) %>%
  pivot_longer(cols = c(-id, -eval_name, -paper_abbrev),
              names_pattern = "(.+)_(score|[ul]b_imp)",
              names_to = c("criterion","element"),
              values_to = "value") -> paper_ratings

# renaming to conform with aggreCATS expectations
paper_ratings <- paper_ratings %>% 
  rename(paper_id = paper_abbrev,
         user_name = eval_name) %>% 
  mutate(round = "round_1",
         element = case_when(element == "lb_imp" ~ "three_point_lower",
                             element == "ub_imp" ~ "three_point_upper",
                             element == "score" ~ "three_point_best"))

# filter only overall for now
paper_ratings %>% 
  filter(criterion == "overall") %>% 
  group_by(user_name, paper_id) %>% 
  filter(sum(is.na(value))==0) %>% 
  ungroup() -> temp
  

AverageWAgg(expert_judgements = temp, round_2_filter = FALSE, type = "ArMean")

IntervalWAgg(expert_judgements = temp, round_2_filter = FALSE, type = "IntWAgg")

aggreCAT::DistributionWAgg(expert_judgements = temp, round_2_filter = FALSE, type = "DistribArMean", percent_toggle = T)

# EXAMPLE CODE ===============================
# data(data_ratings)
# set.seed(1234)
# 
# participant_subset <- data_ratings %>%
#   distinct(user_name) %>%
#   sample_n(5) %>%
#   mutate(participant_name = paste("participant", rep(1:n())))
# 
# single_claim <- data_ratings %>%
#   filter(paper_id == "28") %>%
#   right_join(participant_subset, by = "user_name") %>%
#   filter(grepl(x = element, pattern = "three_.+")) %>%
#   select(-group, -participant_name, -question)
# 
# DistributionWAgg(expert_judgements = single_claim,
#             type = "DistribArMean", percent_toggle = T)
# 


```




### Explicit modeling of 'research quality' (for use in prizes, etc.) {-}

- Use the above aggregation as the outcome of interest, or weight towards categories of greater interest?

- Model with controls -- look for greatest positive residual?   


## Inter-rater reliability

```{r}
#| echo: false
#| fig-height: 8

# function that returns kripp.alpha
# value. It checks if there is more than
# one rater first to avoid errors
# and converts the nested data into
# a matrix to allow 
mod_kripp_alpha <- function(dat) {
  dat = as.matrix.POSIXlt(dat)
  if(nrow(dat)>1) {
    a = kripp.alpha(dat, method = "ratio")
    res = a$value
  } else {
    res = NA_integer_
  }
  return(res)
}

# plot
evals_pub %>% 
  group_by(paper_abbrev) %>% 
  select(paper_abbrev, all_of(rating_cats)) %>%
  nest(data = -paper_abbrev) %>%
  mutate(KrippAlpha = map_dbl(.x = data, .f = mod_kripp_alpha)) %>% 
  unnest(data) %>% 
  group_by(KrippAlpha, add = T) %>% 
  summarize(Raters = n()) %>%
  ungroup() %>% 
  ggplot(aes(x = reorder(paper_abbrev, KrippAlpha), y = KrippAlpha)) +
  geom_point(aes(color = paper_abbrev, size = Raters), 
             stat = "identity", shape = 16, stroke = 1) +
  coord_flip() +
  labs(x = "Paper", y = "Krippendorf's Alpha") +
  theme_bw() +
  theme(text = element_text(size = 15)) +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 20)) +
  scale_size(breaks = c(2,3)) +
  scale_y_continuous(limits = c(-1,1)) +
  guides(color=F)

```



## Decomposing variation, dimension reduction, simple linear models


## Later possiblities

- Relation to evaluation text content (NLP?)

- Relation/prediction of later outcomes (traditional publication, citations, replication)
